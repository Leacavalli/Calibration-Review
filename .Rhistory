# Recode to account for some articles with several options
B.2.2_Options <- c("Empirical", "estimates", "Not reported")
df_B.2.2 <- data.frame(matrix(ncol = length(df_B.2.2_V0), nrow = length(B.2.2_Options)))
colnames(df_B.2.2) <- names(df_B.2.2_V0)
for(i in 1: length(B.2.2_Options)){
df_B.2.2[i,] <- df_B.2.2_V0 |>
filter(grepl(B.2.2_Options[i], Options)) |>
summarise(Count=sum(Count),
Percentage= sum(Percentage))|>
mutate(Options =B.2.2_Options[i], .before = Count)|>
mutate(Field= "B.2.2. Resolution of data used for defining calibration targets", .before = Options)
}
#  B.2.3.  How many calibration targets were used for estimation?
df_B.2.3 <- clean_data |>
group_by(How.many.calibration.targets.were.used.for.estimation.) |>
summarise(Count=n(),
Percentage= 100*round(Count/nrow(clean_data), 3))|>
rename("Options" ="How.many.calibration.targets.were.used.for.estimation.")|>
mutate(Field= "B.2.3.  How many calibration targets were used for estimation?", .before = Options)
# C.1. Number of steps
df_C.1 <- clean_data |>
group_by(Number.of.steps..single.or.sequential.) |>
summarise(Count=n(),
Percentage= 100*round(Count/nrow(clean_data), 3))|>
rename("Options" ="Number.of.steps..single.or.sequential.")|>
mutate(Field= "C.1. Number of steps", .before = Options)
# C.2. Name of calibration algorithm
df_C.2 <- clean_data |>
mutate(Name.of.calibration.algorithm = factor(Name.of.calibration.algorithm, levels= c("Markov Chain Monte Carlo", "Approximate Bayesian Computation", "Maximum likelihood estimation", "Least squares estimation",  "Manual (hand-tuning)", "Not reported", "Other " )))|>
group_by(Name.of.calibration.algorithm) |>
summarise(Count=n(),
Percentage= 100*round(Count/nrow(clean_data), 3))|>
rename("Options" ="Name.of.calibration.algorithm")|>
mutate(Field= "C.2. Name of calibration algorithm", .before = Options)
# C.3. Is calibration implementation (code) available in an open-access repository?
df_C.3 <- clean_data |>
group_by(Is.calibration.implementation..code..available.in.an.open.access.repository.) |>
summarise(Count=n(),
Percentage= 100*round(Count/nrow(clean_data), 3))|>
rename("Options" ="Is.calibration.implementation..code..available.in.an.open.access.repository.")|>
mutate(Field= "C.3. Is calibration implementation (code) available in an open-access repository?", .before = Options)
# C.4. Goodness-of-fit (GOF) measure employed within calibration algorithm
df_C.4 <- clean_data |>
mutate(Goodness.of.fit..GOF..measure.employed.within.calibration.algorithm = factor(Goodness.of.fit..GOF..measure.employed.within.calibration.algorithm, levels= c("Ad-hoc distance function (as in Approximate Bayesian Computation or least squares)", "Data likelihood ", "Not reported", "Not clear", "Other ")))|>
group_by(Goodness.of.fit..GOF..measure.employed.within.calibration.algorithm) |>
summarise(Count=n(),
Percentage= 100*round(Count/nrow(clean_data), 3))|>
rename("Options" ="Goodness.of.fit..GOF..measure.employed.within.calibration.algorithm")|>
mutate(Field= "C.4. Goodness-of-fit (GOF) measure employed within calibration algorithm", .before = Options)
# C.5. What programming language was used for calibration?
df_C.5_V0 <- clean_data |>
group_by(What.programming.language.was.used.for.calibration.) |>
summarise(Count=n(),
Percentage= 100*round(Count/nrow(clean_data), 3))|>
rename("Options" ="What.programming.language.was.used.for.calibration.")|>
mutate(Field= "C.5. What programming language was used for calibration?", .before = Options)
# Recode to account for some articles with several options
C.5_Options <- c("R", "Python", "Matlab", "Julia", "C", "Not reported", "Other")
df_C.5 <- data.frame(matrix(ncol = length(df_C.5_V0), nrow = length(C.5_Options)))
colnames(df_C.5) <- names(df_C.5_V0)
for(i in 1: length(C.5_Options)){
df_C.5[i,] <- df_C.5_V0 |>
filter(grepl(C.5_Options[i], Options)) |>
summarise(Count=sum(Count),
Percentage= sum(Percentage))|>
mutate(Options =C.5_Options[i], .before = Count)|>
mutate(Field= "C.5. What programming language was used for calibration?", .before = Options)
}
# C.6. Do authors list any programming packages used for calibration?
df_C.6 <- clean_data |>
mutate(Do.authors.list.any.programming.packages.used.for.calibration. = factor(Do.authors.list.any.programming.packages.used.for.calibration., levels= c("Yes", "No")))|>
group_by(Do.authors.list.any.programming.packages.used.for.calibration.) |>
summarise(Count=n(),
Percentage= 100*round(Count/nrow(clean_data), 3))|>
rename("Options" ="Do.authors.list.any.programming.packages.used.for.calibration.")|>
mutate(Field= "C.6. Do authors list any programming packages used for calibration?", .before = Options)
# D.1. Nature of calibration results
df_D.1 <- clean_data |>
mutate(Nature.of.calibration.results = factor(Nature.of.calibration.results, levels= c("Point estimate (single parameter / parameter set)", "Sample estimate (multiple parameter sets)", "Distribution estimate (a distribution function which generates parameter values)", "Not reported ", "Other ")))|>
group_by(Nature.of.calibration.results) |>
summarise(Count=n(),
Percentage= 100*round(Count/nrow(clean_data), 3))|>
rename("Options" ="Nature.of.calibration.results")|>
mutate(Field= "D.1. Nature of calibration results", .before = Options)
# D.2. How are calibration results reported?
df_D.2_V0 <- clean_data |>
group_by(How.are.calibration.results.reported.) |>
summarise(Count=n(),
Percentage= 100*round(Count/nrow(clean_data), 3))|>
rename("Options" ="How.are.calibration.results.reported.")|>
mutate(Field= "D.2. How are calibration results reported?", .before = Options)
# Recode to account for some articles with several options
D.2_Options <- c("Numerical", "Graphical", "not reported")
df_D.2 <- data.frame(matrix(ncol = length(df_D.2_V0), nrow = length(D.2_Options)))
colnames(df_D.2) <- names(df_D.2_V0)
for(i in 1: length(D.2_Options)){
df_D.2[i,] <- df_D.2_V0 |>
filter(grepl(D.2_Options[i], Options)) |>
summarise(Count=sum(Count),
Percentage= sum(Percentage))|>
mutate(Options =D.2_Options[i], .before = Count)|>
mutate(Field= "D.2. What programming language was used for calibration?", .before = Options)
}
# D.3. How is uncertainty in calibration outputs reported?
df_D.3_V0 <- clean_data |>
group_by(How.is.uncertainty.in.calibration.outputs.reported.) |>
summarise(Count=n(),
Percentage= 100*round(Count/nrow(clean_data), 3))|>
rename("Options" ="How.is.uncertainty.in.calibration.outputs.reported.")|>
mutate(Field= "D.3. How is uncertainty in calibration outputs reported?", .before = Options)
# Recode to account for some articles with several options
D.3_Options <- c("Numerical", "Graphical", "not reported")
df_D.3 <- data.frame(matrix(ncol = length(df_D.3_V0), nrow = length(D.3_Options)))
colnames(df_D.3) <- names(df_D.3_V0)
for(i in 1: length(D.3_Options)){
df_D.3[i,] <- df_D.3_V0 |>
filter(grepl(D.3_Options[i], Options)) |>
summarise(Count=sum(Count),
Percentage= sum(Percentage))|>
mutate(Options =D.3_Options[i], .before = Count)|>
mutate(Field= "D.3. What programming language was used for calibration?", .before = Options)
}
# D.4. What is the size of the calibration output?
df_D.4 <- clean_data |>
mutate(size.of.the.calibration.output.reported = ifelse(What.is.the.size.of.the.calibration.output. == "Not reported", "Not reported", "[Number provided]"))|>
mutate(size.of.the.calibration.output.reported = factor(size.of.the.calibration.output.reported, levels= c("[Number provided]", "Not reported")))|>
group_by(size.of.the.calibration.output.reported) |>
summarise(Count=n(),
Percentage= 100*round(Count/nrow(clean_data), 3))|>
rename("Options" ="size.of.the.calibration.output.reported")|>
mutate(Field= "D.4. What is the size of the calibration output?", .before = Options)
# If number provided, what is the range of the reported size?
Calibration_size_range <- clean_data |>
mutate(size.of.the.calibration.output.reported = ifelse(What.is.the.size.of.the.calibration.output. == "Not reported", "Not reported", "[Number provided]"))|>
filter(size.of.the.calibration.output.reported != "Not reported") |>
mutate(What.is.the.size.of.the.calibration.output.= as.numeric(str_replace(What.is.the.size.of.the.calibration.output., ",", "")))
# Number of point estimates
Calibration_size_range |>
group_by(Name.of.calibration.algorithm) |>
summarise(N_point_estimate= sum(Nature.of.calibration.results == "Point estimate (single parameter / parameter set)"))
# Range of calibration size among those that were not point estimates
Calibration_size_range |>
filter(Nature.of.calibration.results != "Point estimate (single parameter / parameter set)") |>
group_by(Name.of.calibration.algorithm) |>
summarise(size_min= min(What.is.the.size.of.the.calibration.output.),
size_max= max(What.is.the.size.of.the.calibration.output.))
Calibration_size_range |>
group_by(Name.of.calibration.algorithm) |>
summarise(size_min= min(What.is.the.size.of.the.calibration.output.),
size_max= max(What.is.the.size.of.the.calibration.output.))
Calibration_size_range
Calibration_size_range |>
ggplot() +
geom_histogram(aes(x=What.is.the.size.of.the.calibration.output.))
Calibration_size_range |>
ggplot() +
geom_histogram(aes(x=What.is.the.size.of.the.calibration.output.))+
theme_classic()
Calibration_size_range |>
ggplot() +
geom_histogram(aes(x=What.is.the.size.of.the.calibration.output.))+
theme_classic()+
facet_grid(. ~ Name.of.calibration.algorithm)
Calibration_size_range |>
ggplot() +
geom_histogram(aes(x=What.is.the.size.of.the.calibration.output.))+
theme_classic()+
facet_grid(Name.of.calibration.algorithm ~ .)
Calibration_size_range |>
ggplot() +
geom_histogram(aes(x=What.is.the.size.of.the.calibration.output.))+
theme_classic()+
facet_grid(Name.of.calibration.algorithm ~ .)+
xlab("Size of calibration output")
ggplot()+
geom_errorbar(data=Calibration_size_range,
mapping=aes(x=Name.of.calibration.algorithm, ymin= min(What.is.the.size.of.the.calibration.output.), ymax=max(What.is.the.size.of.the.calibration.output.)),
width=0.2, size=1) +
coord_flip()
ggplot()+
geom_errorbar(data=Calibration_size_range,
mapping=aes(x=Name.of.calibration.algorithm, ymin= min(What.is.the.size.of.the.calibration.output.), ymax=max(What.is.the.size.of.the.calibration.output.)),
width=0.2, linewidth=1) +
coord_flip()
ggplot()+
geom_errorbar(data=Calibration_size_range,
mapping=aes(x=Name.of.calibration.algorithm, ymin= min(What.is.the.size.of.the.calibration.output.), ymax=max(What.is.the.size.of.the.calibration.output.)),
width=0.2, linewidth=1)
ggplot()+
geom_errorbar(data=Calibration_size_range,
mapping=aes(x=Name.of.calibration.algorithm, ymin= min(What.is.the.size.of.the.calibration.output.), ymax=max(What.is.the.size.of.the.calibration.output.))
width=0.2, linewidth=1)
ggplot()+
geom_errorbar(data=Calibration_size_range,
mapping=aes(x=Name.of.calibration.algorithm,
ymin= min(What.is.the.size.of.the.calibration.output.),
ymax=max(What.is.the.size.of.the.calibration.output.))) +
coord_flip()
Calibration_size_range |>
ggplot()+
geom_errorbar(aes(x=Name.of.calibration.algorithm,
ymin= min(What.is.the.size.of.the.calibration.output.),
ymax=max(What.is.the.size.of.the.calibration.output.))) +
coord_flip()
Calibration_size_range |>
ggplot()+
geom_errorbar(aes(x=Name.of.calibration.algorithm,
ymin= min(What.is.the.size.of.the.calibration.output.),
ymax=max(What.is.the.size.of.the.calibration.output.))) +
coord_flip()
Calibration_size_range |>
group_by(Name.of.calibration.algorithm) |>
summarise(size_min= min(What.is.the.size.of.the.calibration.output.),
size_max= max(What.is.the.size.of.the.calibration.output.))
Calibration_size_range |>
group_by(Name.of.calibration.algorithm) |>
summarise(size_min= min(What.is.the.size.of.the.calibration.output.),
size_max= max(What.is.the.size.of.the.calibration.output.))|>
ggplot()+
geom_errorbar(aes(x=Name.of.calibration.algorithm,
ymin= size_min ,
ymax= size_max)) +
coord_flip()
Calibration_size_range |>
group_by(Name.of.calibration.algorithm) |>
summarise(size_min= min(What.is.the.size.of.the.calibration.output.),
size_max= max(What.is.the.size.of.the.calibration.output.))|>
ggplot()+
geom_errorbar(aes(x=Name.of.calibration.algorithm,
ymin= size_min ,
ymax= size_max)) +
coord_flip()
Calibration_size_range |>
group_by(Name.of.calibration.algorithm) |>
summarise(size_min= min(What.is.the.size.of.the.calibration.output.),
size_max= max(What.is.the.size.of.the.calibration.output.))|>
ggplot()+
geom_errorbar(aes(x=Name.of.calibration.algorithm,
ymin= size_min ,
ymax= size_max)) +
theme_classic()+
coord_flip()
Calibration_size_range |>
group_by(Name.of.calibration.algorithm) |>
summarise(size_min= min(What.is.the.size.of.the.calibration.output.),
size_max= max(What.is.the.size.of.the.calibration.output.))|>
filter()
ggplot(Name.of.calibration.algorithm != "Other")+
geom_errorbar(aes(x=Name.of.calibration.algorithm,
ymin= size_min ,
ymax= size_max)) +
theme_classic()+
coord_flip()+
xlab("Name of calibration algorithm")
Calibration_size_range |>
group_by(Name.of.calibration.algorithm) |>
summarise(size_min= min(What.is.the.size.of.the.calibration.output.),
size_max= max(What.is.the.size.of.the.calibration.output.))|>
filter(Name.of.calibration.algorithm != "Other")|>
ggplot()+
geom_errorbar(aes(x=Name.of.calibration.algorithm,
ymin= size_min ,
ymax= size_max)) +
theme_classic()+
coord_flip()+
xlab("Name of calibration algorithm")
Calibration_size_range |>
group_by(Name.of.calibration.algorithm) |>
summarise(size_min= min(What.is.the.size.of.the.calibration.output.),
size_max= max(What.is.the.size.of.the.calibration.output.))|>
filter(Name.of.calibration.algorithm != "Other")|>
ggplot()+
geom_errorbar(aes(x=Name.of.calibration.algorithm,
ymin= size_min ,
ymax= size_max), width=0.2) +
theme_classic()+
coord_flip()+
xlab("Name of calibration algorithm")
Calibration_size_range |>
group_by(Name.of.calibration.algorithm) |>
summarise(size_min= min(What.is.the.size.of.the.calibration.output.),
size_max= max(What.is.the.size.of.the.calibration.output.))|>
filter(Name.of.calibration.algorithm != "Other")|>
ggplot()+
geom_errorbar(aes(x=Name.of.calibration.algorithm,
ymin= size_min ,
ymax= size_max), width=0.2, line=1) +
theme_classic()+
coord_flip()+
xlab("Name of calibration algorithm")
Calibration_size_range |>
group_by(Name.of.calibration.algorithm) |>
summarise(size_min= min(What.is.the.size.of.the.calibration.output.),
size_max= max(What.is.the.size.of.the.calibration.output.))|>
filter(Name.of.calibration.algorithm != "Other")|>
ggplot()+
geom_errorbar(aes(x=Name.of.calibration.algorithm,
ymin= size_min ,
ymax= size_max), width=0.2, size=1) +
theme_classic()+
coord_flip()+
xlab("Name of calibration algorithm")
Calibration_size_range |>
group_by(Name.of.calibration.algorithm) |>
summarise(size_min= min(What.is.the.size.of.the.calibration.output.),
size_max= max(What.is.the.size.of.the.calibration.output.))|>
filter(Name.of.calibration.algorithm != "Other")|>
ggplot()+
geom_errorbar(aes(x=Name.of.calibration.algorithm,
ymin= size_min ,
ymax= size_max), width=0.2) +
theme_classic()+
coord_flip()+
xlab("Name of calibration algorithm")
Calibration_size_range |>
group_by(Name.of.calibration.algorithm) |>
summarise(size_min= min(What.is.the.size.of.the.calibration.output.),
size_max= max(What.is.the.size.of.the.calibration.output.))|>
filter(Name.of.calibration.algorithm != "Other ")|>
ggplot()+
geom_errorbar(aes(x=Name.of.calibration.algorithm,
ymin= size_min ,
ymax= size_max), width=0.2) +
theme_classic()+
coord_flip()+
xlab("Name of calibration algorithm")
# Chord diagram for association between two categorical variables
# install.packages("circlize")
library(circlize)
install.packages("circlize")
# Chord diagram for association between two categorical variables
# install.packages("circlize")
library(circlize)
clean_data |>
select(Disease.type..choose.all.that.apply., Name.of.calibration.algorithm) |>
chordDiagram()
table(clean_data$Disease.type..choose.all.that.apply.)
table(clean_data$Name.of.calibration.algorithm)
clean_data |>
select(Disease.type..choose.all.that.apply., Name.of.calibration.algorithm) |>
mutate(Name.of.calibration.algorithm= ifelse(Name.of.calibration.algorithm=="Approximate Bayesian Computation", "ABC",
ifelse(Name.of.calibration.algorithm=="Maximum likelihood estimation ", "MLE",
ifelse(Name.of.calibration.algorithm=="Least squares estimation ", "LSE",
ifelse(Name.of.calibration.algorithm=="Manual (hand-tuning) ", "Manual",
Name.of.calibration.algorithm)))))
chordDiagram()
clean_data |>
select(Disease.type..choose.all.that.apply., Name.of.calibration.algorithm) |>
mutate(Name.of.calibration.algorithm= ifelse(Name.of.calibration.algorithm=="Approximate Bayesian Computation", "ABC",
ifelse(Name.of.calibration.algorithm=="Maximum likelihood estimation ", "MLE",
ifelse(Name.of.calibration.algorithm=="Least squares estimation ", "LSE",
ifelse(Name.of.calibration.algorithm=="Manual (hand-tuning) ", "Manual",
Name.of.calibration.algorithm)))))|>
chordDiagram()
clean_data |>
select(Disease.type..choose.all.that.apply., Name.of.calibration.algorithm) |>
mutate(Name.of.calibration.algorithm= ifelse(Name.of.calibration.algorithm=="Approximate Bayesian Computation", "ABC",
ifelse(Name.of.calibration.algorithm=="Maximum likelihood estimation", "MLE",
ifelse(Name.of.calibration.algorithm=="Least squares estimation ", "LSE",
ifelse(Name.of.calibration.algorithm=="Manual (hand-tuning)", "Manual",
Name.of.calibration.algorithm)))))|>
chordDiagram()
clean_data |>
select(Disease.type..choose.all.that.apply., Name.of.calibration.algorithm) |>
mutate(Name.of.calibration.algorithm= ifelse(Name.of.calibration.algorithm=="Approximate Bayesian Computation", "ABC",
ifelse(Name.of.calibration.algorithm=="Maximum likelihood estimation", "MLE",
ifelse(Name.of.calibration.algorithm=="Least squares estimation", "LSE",
ifelse(Name.of.calibration.algorithm=="Manual (hand-tuning)", "Manual",
ifelse(Name.of.calibration.algorithm==" Markov Chain Monte Carlo", "MCMC",
Name.of.calibration.algorithm))))))|>
chordDiagram()
clean_data |>
select(Disease.type..choose.all.that.apply., Name.of.calibration.algorithm) |>
mutate(Name.of.calibration.algorithm= ifelse(Name.of.calibration.algorithm=="Approximate Bayesian Computation", "ABC",
ifelse(Name.of.calibration.algorithm=="Maximum likelihood estimation", "MLE",
ifelse(Name.of.calibration.algorithm=="Least squares estimation", "LSE",
ifelse(Name.of.calibration.algorithm=="Manual (hand-tuning)", "Manual",
ifelse(Name.of.calibration.algorithm=="Markov Chain Monte Carlo", "MCMC",
Name.of.calibration.algorithm))))))|>
chordDiagram()
clean_data |>
select(Disease.type..choose.all.that.apply., Name.of.calibration.algorithm) |>
mutate(Name.of.calibration.algorithm= ifelse(Name.of.calibration.algorithm=="Approximate Bayesian Computation", "ABC",
ifelse(Name.of.calibration.algorithm=="Maximum likelihood estimation", "MLE",
ifelse(Name.of.calibration.algorithm=="Least squares estimation", "LSE",
ifelse(Name.of.calibration.algorithm=="Manual (hand-tuning)", "Manual",
ifelse(Name.of.calibration.algorithm=="Markov Chain Monte Carlo", "MCMC",
Name.of.calibration.algorithm)))))) |>
mutate(Name.of.calibration.algorithm= factor(Name.of.calibration.algorithm, levels= c("MCMC", "ABC", "MLE", "LSE", "Manual", "Other", "Not Reported")))|>
chordDiagram()
clean_data |>
select(Disease.type..choose.all.that.apply., Name.of.calibration.algorithm) |>
mutate(Name.of.calibration.algorithm= ifelse(Name.of.calibration.algorithm=="Approximate Bayesian Computation", "ABC",
ifelse(Name.of.calibration.algorithm=="Maximum likelihood estimation", "MLE",
ifelse(Name.of.calibration.algorithm=="Least squares estimation", "LSE",
ifelse(Name.of.calibration.algorithm=="Manual (hand-tuning)", "Manual",
ifelse(Name.of.calibration.algorithm=="Markov Chain Monte Carlo", "MCMC",
Name.of.calibration.algorithm)))))) |>
mutate( Name.of.calibration.algorithm==factor(Name.of.calibration.algorithm, levels= c("MCMC", "ABC", "MLE", "LSE", "Manual", "Other", "Not Reported")))
clean_data |>
select(Disease.type..choose.all.that.apply., Name.of.calibration.algorithm) |>
mutate(Name.of.calibration.algorithm= ifelse(Name.of.calibration.algorithm=="Approximate Bayesian Computation", "ABC",
ifelse(Name.of.calibration.algorithm=="Maximum likelihood estimation", "MLE",
ifelse(Name.of.calibration.algorithm=="Least squares estimation", "LSE",
ifelse(Name.of.calibration.algorithm=="Manual (hand-tuning)", "Manual",
ifelse(Name.of.calibration.algorithm=="Markov Chain Monte Carlo", "MCMC",
Name.of.calibration.algorithm)))))) |>
mutate( Name.of.calibration.algorithm==factor(Name.of.calibration.algorithm, levels= c("MCMC", "ABC", "MLE", "LSE", "Manual", "Other", "Not Reported")))|>
chordDiagram()
clean_data$How.is.uncertainty.in.calibration.outputs.reported.
clean_data$How.is.uncertainty.in.calibration.outputs.reported.
clean_data |>
select(Nature.of.calibration.results, Name.of.calibration.algorithm) |>
mutate(Name.of.calibration.algorithm= ifelse(Name.of.calibration.algorithm=="Approximate Bayesian Computation", "ABC",
ifelse(Name.of.calibration.algorithm=="Maximum likelihood estimation", "MLE",
ifelse(Name.of.calibration.algorithm=="Least squares estimation", "LSE",
ifelse(Name.of.calibration.algorithm=="Manual (hand-tuning)", "Manual",
ifelse(Name.of.calibration.algorithm=="Markov Chain Monte Carlo", "MCMC",
Name.of.calibration.algorithm)))))) |>
mutate( Name.of.calibration.algorithm==factor(Name.of.calibration.algorithm, levels= c("MCMC", "ABC", "MLE", "LSE", "Manual", "Other", "Not Reported")))|>
chordDiagram()
table(clean_data$Nature.of.calibration.results)
clean_data |>
select(Nature.of.calibration.results, Name.of.calibration.algorithm) |>
mutate(Name.of.calibration.algorithm= ifelse(Name.of.calibration.algorithm=="Approximate Bayesian Computation", "ABC",
ifelse(Name.of.calibration.algorithm=="Maximum likelihood estimation", "MLE",
ifelse(Name.of.calibration.algorithm=="Least squares estimation", "LSE",
ifelse(Name.of.calibration.algorithm=="Manual (hand-tuning)", "Manual",
ifelse(Name.of.calibration.algorithm=="Markov Chain Monte Carlo", "MCMC",
Name.of.calibration.algorithm)))))) |>
mutate( Name.of.calibration.algorithm==factor(Name.of.calibration.algorithm, levels= c("MCMC", "ABC", "MLE", "LSE", "Manual", "Other", "Not Reported")))|>
mutate(Nature.of.calibration.results= ifelse(Nature.of.calibration.results=="Distribution estimate (a distribution function which generates parameter values) ", "Distribution",
ifelse(Nature.of.calibration.results=="Point estimate (single parameter / parameter set)", "Point estimate",
ifelse(Nature.of.calibration.results=="Sample estimate (multiple parameter sets)", "Sample",  Nature.of.calibration.results)))) |>
chordDiagram()
clean_data |>
select(Nature.of.calibration.results, Name.of.calibration.algorithm) |>
mutate(Name.of.calibration.algorithm= ifelse(Name.of.calibration.algorithm=="Approximate Bayesian Computation", "ABC",
ifelse(Name.of.calibration.algorithm=="Maximum likelihood estimation", "MLE",
ifelse(Name.of.calibration.algorithm=="Least squares estimation", "LSE",
ifelse(Name.of.calibration.algorithm=="Manual (hand-tuning)", "Manual",
ifelse(Name.of.calibration.algorithm=="Markov Chain Monte Carlo", "MCMC",
Name.of.calibration.algorithm)))))) |>
mutate( Name.of.calibration.algorithm==factor(Name.of.calibration.algorithm, levels= c("MCMC", "ABC", "MLE", "LSE", "Manual", "Other", "Not Reported")))|>
mutate(Nature.of.calibration.results= ifelse(Nature.of.calibration.results=="Distribution estimate (a distribution function which generates parameter values)", "Distribution",
ifelse(Nature.of.calibration.results=="Point estimate (single parameter / parameter set)", "Point estimate",
ifelse(Nature.of.calibration.results=="Sample estimate (multiple parameter sets)", "Sample",  Nature.of.calibration.results)))) |>
chordDiagram()
clean_data |>
select(Nature.of.calibration.results, Name.of.calibration.algorithm) |>
mutate(Name.of.calibration.algorithm= ifelse(Name.of.calibration.algorithm=="Approximate Bayesian Computation", "ABC",
ifelse(Name.of.calibration.algorithm=="Maximum likelihood estimation", "MLE",
ifelse(Name.of.calibration.algorithm=="Least squares estimation", "LSE",
ifelse(Name.of.calibration.algorithm=="Manual (hand-tuning)", "Manual",
ifelse(Name.of.calibration.algorithm=="Markov Chain Monte Carlo", "MCMC",
Name.of.calibration.algorithm)))))) |>
mutate( Name.of.calibration.algorithm==factor(Name.of.calibration.algorithm, levels= c("MCMC", "ABC", "MLE", "LSE", "Manual", "Other", "Not Reported")))|>
mutate(Nature.of.calibration.results= ifelse(Nature.of.calibration.results=="Distribution estimate (a distribution function which generates parameter values)", "Distribution",
ifelse(Nature.of.calibration.results=="Point estimate (single parameter / parameter set)", "Point estimate",
ifelse(Nature.of.calibration.results=="Sample estimate (multiple parameter sets)", "Sample",  Nature.of.calibration.results)))) |>
mutate( Nature.of.calibration.results==factor(Nature.of.calibration.results, levels= c("Point estimate", "Sample", "Distribution",  "Not Reported")))|>
chordDiagram()
clean_data |>
select(Nature.of.calibration.results, Name.of.calibration.algorithm) |>
mutate(Name.of.calibration.algorithm= ifelse(Name.of.calibration.algorithm=="Approximate Bayesian Computation", "ABC",
ifelse(Name.of.calibration.algorithm=="Maximum likelihood estimation", "MLE",
ifelse(Name.of.calibration.algorithm=="Least squares estimation", "LSE",
ifelse(Name.of.calibration.algorithm=="Manual (hand-tuning)", "Manual",
ifelse(Name.of.calibration.algorithm=="Markov Chain Monte Carlo", "MCMC",
Name.of.calibration.algorithm)))))) |>
mutate( Name.of.calibration.algorithm==factor(Name.of.calibration.algorithm, levels= c("MCMC", "ABC", "MLE", "LSE", "Manual", "Other", "Not Reported")))|>
mutate(Nature.of.calibration.results= ifelse(Nature.of.calibration.results=="Distribution estimate (a distribution function which generates parameter values)", "Distribution",
ifelse(Nature.of.calibration.results=="Point estimate (single parameter / parameter set)", "Point estimate",
ifelse(Nature.of.calibration.results=="Sample estimate (multiple parameter sets)", "Sample",  Nature.of.calibration.results)))) |>
mutate( Nature.of.calibration.results==factor(Nature.of.calibration.results, levels= c("Point estimate", "Sample", "Distribution",  "Not Reported")))|>
chordDiagram(link.lwd = 1,    # Line width
link.lty = 1,    # Line type
link.border = 1)
clean_data |>
select(Disease.type..choose.all.that.apply., Name.of.calibration.algorithm) |>
mutate(Name.of.calibration.algorithm= ifelse(Name.of.calibration.algorithm=="Approximate Bayesian Computation", "ABC",
ifelse(Name.of.calibration.algorithm=="Maximum likelihood estimation", "MLE",
ifelse(Name.of.calibration.algorithm=="Least squares estimation", "LSE",
ifelse(Name.of.calibration.algorithm=="Manual (hand-tuning)", "Manual",
ifelse(Name.of.calibration.algorithm=="Markov Chain Monte Carlo", "MCMC",
Name.of.calibration.algorithm)))))) |>
mutate( Name.of.calibration.algorithm==factor(Name.of.calibration.algorithm, levels= c("MCMC", "ABC", "MLE", "LSE", "Manual", "Other", "Not Reported")))|>
chordDiagram()
clean_data |>
select(Nature.of.calibration.results, Name.of.calibration.algorithm) |>
mutate(Name.of.calibration.algorithm= ifelse(Name.of.calibration.algorithm=="Approximate Bayesian Computation", "ABC",
ifelse(Name.of.calibration.algorithm=="Maximum likelihood estimation", "MLE",
ifelse(Name.of.calibration.algorithm=="Least squares estimation", "LSE",
ifelse(Name.of.calibration.algorithm=="Manual (hand-tuning)", "Manual",
ifelse(Name.of.calibration.algorithm=="Markov Chain Monte Carlo", "MCMC",
Name.of.calibration.algorithm)))))) |>
mutate( Name.of.calibration.algorithm==factor(Name.of.calibration.algorithm, levels= c("MCMC", "ABC", "MLE", "LSE", "Manual", "Other", "Not Reported")))|>
mutate(Nature.of.calibration.results= ifelse(Nature.of.calibration.results=="Distribution estimate (a distribution function which generates parameter values)", "Distribution",
ifelse(Nature.of.calibration.results=="Point estimate (single parameter / parameter set)", "Point estimate",
ifelse(Nature.of.calibration.results=="Sample estimate (multiple parameter sets)", "Sample",  Nature.of.calibration.results)))) |>
mutate( Nature.of.calibration.results==factor(Nature.of.calibration.results, levels= c("Point estimate", "Sample", "Distribution",  "Not Reported")))|>
chordDiagram()
clean_data |>
select(Disease.type..choose.all.that.apply., Name.of.calibration.algorithm) |>
mutate(Name.of.calibration.algorithm= ifelse(Name.of.calibration.algorithm=="Approximate Bayesian Computation", "ABC",
ifelse(Name.of.calibration.algorithm=="Maximum likelihood estimation", "MLE",
ifelse(Name.of.calibration.algorithm=="Least squares estimation", "LSE",
ifelse(Name.of.calibration.algorithm=="Manual (hand-tuning)", "Manual",
ifelse(Name.of.calibration.algorithm=="Markov Chain Monte Carlo", "MCMC",
Name.of.calibration.algorithm)))))) |>
mutate( Name.of.calibration.algorithm==factor(Name.of.calibration.algorithm, levels= c("MCMC", "ABC", "MLE", "LSE", "Manual", "Other", "Not Reported")))|>
chordDiagram()
